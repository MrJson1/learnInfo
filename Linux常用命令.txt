Xshell 本地上传文件命令：rz




## linux文件属性和修改

# LINUX文件基本属性

使用ls -l可以看到文件的属性以及文件所属的用户和组，如
```
drwxr-xr-x  32 nanbei  staff    1024  4  5 21:02 scrapy
-rw-r--r--@  1 nanbei  staff  156542  3 20 21:40 scrapy-arch.jpg
-rw-r--r--@  1 nanbei  staff  135951  3 20 22:16 scrapy-class.jpg
```
## 文件属性

在Linux中第一个字符代表这个文件是目录、文件或链接文件等等。

- 若是[ *d* ]则是目录
- 若是[ *-* ]则是文件；
- 若是[ *l* ]则表示为链接文档(link file)；
- 若是[ *b* ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；
- 若是[ *c* ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。

接下来的字符中，以三个为一组，且均为『rwx』 的三个参数的组合。**其中，[ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)**。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。

每个文件的属性由左边第一部分的10个字符来确定。

从左至右用0-9这些数字来表示。

第0位确定文件类型，第1-3位确定属主（该文件的所有者）拥有该文件的权限。

第4-6位确定属组（所有者的同组用户）拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。

其中，第1、4、7位表示读权限，如果用"r"字符表示，则有读权限，如果用"-"字符表示，则没有读权限；

第2、5、8位表示写权限，如果用"w"字符表示，则有写权限，如果用"-"字符表示没有写权限；第3、6、9位表示可执行权限，如果用"x"字符表示，则有执行权限，如果用"-"字符表示，则没有执行权限。

## LINUX文件属主和属组

```
[root@www /]# ls -l
total 64
drwxr-xr-x 2 root  root  4096 Feb 15 14:46 cron
drwxr-xr-x 3 mysql mysql 4096 Apr 21  2014 mysql
```

对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。

同时，在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。

文件所有者以外的用户又可以分为文件所有者的同组用户和其他用户。

因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。

在以上实例中，mysql 文件是一个目录文件，属主和属组都为 mysql，属主有可读、可写、可执行的权限；与属主同组的其他用户有可读和可执行的权限；其他用户也有可读和可执行的权限。

对于 root 用户来说，一般情况下，文件的权限对其不起作用。

## 更改文件属性

### 1.chown：更改文件属主和属组

```latex
chown [-R] 属主名:属组名 文件名
```

- -R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改。

### 2.chmod：更改文件9个属性

Linux文件属性有两种设置方法，一种是数字，一种是符号。

#### 数字类型改变文件权限

```
chmod [-R] xyz 文件或目录
```

每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： [-rwxrwx---] 分数则是：

- owner = rwx = 4+2+1 = 7
- group = rwx = 4+2+1 = 7
- others= --- = 0+0+0 = 0

Linux文件的基本权限就有九个，分别是owner/group/others三种身份各有自己的read/write/execute权限。

文件的权限字符为：『-rwxrwxrwx』， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：

- r:4
- w:2
- x:1

每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： [-rwxrwx---] 分数则是：

- owner = rwx = 4+2+1 = 7
- group = rwx = 4+2+1 = 7
- others= --- = 0+0+0 = 0

#### 符号类型改变文件权限

```
chmod u=rwx,g=rx,o=r 文件名
```
基本上就九个权限分别是(1)user (2)group (3)others三种身份， 那么我们就可以藉由u, g, o来代表三种身份的权限！

python 程序后台服务远行命令：nohup python filename.py & 
#nohup的重定向输出到 myout.out

$ nohup python -u myfile.py > myout.out  &